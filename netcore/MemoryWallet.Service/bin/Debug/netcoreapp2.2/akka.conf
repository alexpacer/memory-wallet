akka {  
    stdout-loglevel = DEBUG
    loglevel = DEBUG
    log-config-on-start = on     
    loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]   
    actor {                
        debug {  
              receive = on 
              autoreceive = on
              lifecycle = on
              event-stream = on
              unhandled = on
        }
        provider = remote
    }
    remote {
        dot-netty.tcp {
            port = 8080
            hostname = 0.0.0.0
            public-hostname = localhost
        }
    }
}

akka.persistence {
    journal {
        plugin = "akka.persistence.journal.eventstore"
        eventstore {
        	class = "Akka.Persistence.EventStore.Journal.EventStoreJournal, Akka.Persistence.EventStore"
            connection-string = "ConnectTo=tcp://admin:changeit@localhost:1113;HeartBeatTimeout=500"
            connection-name = "Akka-MemoryWallet"
        }
    }
    snapshot-store {
        eventstore {
            class = "Akka.Persistence.EventStore.Snapshot.EventStoreSnapshotStore, Akka.Persistence.EventStore"
            connection-string = "ConnectTo=tcp://admin:changeit@localhost:1113;HeartBeatTimeout=500"
            connection-name = "Akka-MemoryWallet-Snapshot"
            plugin-dispatcher = "akka.actor.default-dispatcher"
        
            # how many snapshots to pull at a time
            read-batch-size = 500
            # which adapter to use
            adapter = "default"
            # prefix used to create stream name along side with PersistenceId for snapshot
            prefix = "snapshot@"
        }
    }
    
    query.journal.plugin = "akka.persistence.query.journal.eventstore"
}