@page "/register"
@using Akka.Actor
@using MemoryWallet.Lib.Model
@using MemoryWallet.Web.Data
@using MemoryWallet.Web.Hub
@using Microsoft.AspNetCore.SignalR
@using Serilog

@inject ILogger _logger
@inject IJSRuntime _jsRuntime
@inject IHubContext<PlayerHub> _playerHub
@inject Startup.PlayerManagerProvider provider

<h1>Register</h1>

<div>
    <h1 class="display-4">Register player</h1>
    <EditForm Model="@registerModel" OnValidSubmit="@Submit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" name="name" @bind-Value="registerModel.Name" class="form-control" placeholder="John Oliver" />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" name="email" @bind-Value="registerModel.Email" class="form-control" placeholder="name@example.com" />
        </div>

        <button type="submit" class="btn btn-primary mb-2">Register</button>
    </EditForm>
    
    
</div>


@code {
    private RegisterModel registerModel = new RegisterModel();
    private ActorSelection _playerManagers;
    
    /// This is the key to access connection object stored in client side
    private readonly string HubRegister = "register";
    
    protected override void OnInitialized()
    {
        _playerManagers = provider();
        
        Console.WriteLine("blah");
        _jsRuntime.InvokeAsync<object>(
            "PlayerHubClient.Start", 
            HubRegister, 
            "/playerhub");
        
        base.OnInitialized();
    }

    async Task Submit()
    {
        var newPlayer = new CreatePlayerEvt(registerModel.Name, registerModel.Email);
        
        _playerManagers.Tell(newPlayer);
        
        _logger.Debug($"Registering player {registerModel.Email}");
    }

}